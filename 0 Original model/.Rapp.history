matrix(rnorm(6, mu[2], sig[2]+0.1), nrow=n.reps, ncol=length(y))
pnas<-read.csv("~/Google Drive/Greens/FINALLY/GitHub/Spatiotemporal-infection-model/0 Original model/PNAS_params.csv")
pnas
load('~/Google Drive/Greens/FINALLY/GitHub/Spatiotemporal-infection-model/0 Original model/OriginalModel_DClone_20161109.RData')
mod0<-mod
S
HPDinterval(as.mcmc(rbind(mod0[[1]], mod0[[2]], mod0[[3]])))
library(dclone)
HPDinterval(as.mcmc(rbind(mod0[[1]], mod0[[2]], mod0[[3]])))
m0<-HPDinterval(as.mcmc(rbind(mod0[[1]], mod0[[2]], mod0[[3]])), prob=0.99999)
m0
m0<-HPDinterval(as.mcmc(rbind(mod0[[1]], mod0[[2]], mod0[[3]])), prob=1)
m0
estimate_mode <- function(s) {#
  d <- density(s)#
  d$x[which.max(d$y)]#
}
apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, estimate_mode)
m0<-apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, estimate_mode)
est0<-cbind(m0, CI0)
CI0<-HPDinterval(as.mcmc(rbind(mod0[[1]], mod0[[2]], mod0[[3]])))#
m0<-apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, estimate_mode)#
#
est0<-cbind(m0, CI0)
est0
est0.log<-cbind(m0, CI0)
est.0<-rbind(exp(est0.log[1:11,]), inv.logit(est0.log[12:15,]))
library(boot)
CI0<-HPDinterval(as.mcmc(rbind(mod0[[1]], mod0[[2]], mod0[[3]])))#
m0<-apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, estimate_mode)#
#
est0.log<-cbind(m0, CI0)#
est.0<-rbind(exp(est0.log[1:11,]), inv.logit(est0.log[12:15,]))
est.0
plot(mod0)
v0<-apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, sd)^2
v0
m0<-apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, estimate_mode)
v0<-apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, sd)^2#
m0<-apply(rbind(mod0[[1]], mod0[[2]], mod0[[3]]), 2, estimate_mode)#
#
est0.log<-cbind(m0, m0-1.96*sqrt(10*v0), m0+1.96*sqrt(10*v0))
est0.log
est.0<-rbind(exp(est0.log[1:11,]), inv.logit(est0.log[12:15,]))
est.0
par(mfrow=c(3,1), mar=c(4,4,2,1))
plot(density(c(mod0[[1]][,i], mod0[[2]][,i], mod0[[3]][,i]))
i=8
plot(density(c(mod0[[1]][,i], mod0[[2]][,i], mod0[[3]][,i])))
par(mfrow=c(1,3), mar=c(4,4,2,1))
plot(density(c(mod0[[1]][,i], mod0[[2]][,i], mod0[[3]][,i])))
plot(density(exp(c(mod0[[1]][,i], mod0[[2]][,i], mod0[[3]][,i]))))
plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i])
i=1
plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i])
plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i], las=1, bty="n")
plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main="", las=1, bty="n", xlab=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i])
par(mfrow=c(1,3), mar=c(4,4,2,1))#
for(i in 1:3){#
	plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main="", las=1, bty="n", xlab=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i])#
	}
plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main="", las=1, bty="n", xlab=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i], xlim=c(0,10))
par(mfrow=c(1,1), mar=c(4,4,2,1))
i<-1# for(i in 1:3){
plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main="", las=1, bty="n", xlab=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i], xlim=c(0,10))
plot(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), main="", las=1, bty="n", xlab=c(expression(phi[1]), expression(phi[2]), expression(phi[3]))[i], xlim=c(0,6))
for(i in 2:3)lines(density(exp(c(mod0[[1]][,c(8:10)[i]], mod0[[2]][,c(8:10)[i]], mod0[[3]][,c(8:10)[i]]))), col=i)
load('~/Google Drive/Greens/FINALLY/GitHub/Spatiotemporal-infection-model/3 Fitting/LiceFits2Data_20160215.RData')
mod1<-mod
dctable(mod1)
v1<-apply(rbind(mod1[[1]], mod1[[2]], mod1[[3]]), 2, sd)^2#
m1<-apply(rbind(mod1[[1]], mod1[[2]], mod1[[3]]), 2, estimate_mode)
est1.log<-cbind(m1, m1-1.96*sqrt(10*v1), m1+1.96*sqrt(10*v1))
est1.log
est.1<-rbind(inv.logit(est1.log[1:4,]), exp(est1.log[5:8,]), )
est.1<-rbind(inv.logit(est1.log[1:4,]), exp(est1.log[5:8,]))
est.1
lines(density(exp(c(mod1[[1]][,7], mod1[[2]][,7], mod[[3]][,7]))), col=4)
est.0
est.1
z<-read.csv("~/Google Drive/Diabetes/DIP/CareLink-Export-1479302500581.csv", skip=11)#
z$dt<-as.POSIXct(strptime(z$Timestamp, format="%d/%m/%y %H:%M:%S"))#
y<-read.csv("~/Google Drive/Diabetes/DIP/extra.csv")#
y$dt<-as.POSIXct(strptime(paste(y$Date, y$Time), format="%y-%m-%d %H:%M"))#
date.range<-c(as.POSIXct("2016-11-09 00:00:00"), as.POSIXct("2016-11-16 23:59:59"))#
d<-as.numeric(as.Date(date.range[2])-as.Date(date.range[1]))#
par(mfrow=c(4,1), mar=c(3,4,2,1), oma=c(1,2,1,1))#
#
for(i in 1:d){#
	zi<-subset(z, z$dt>=(c(date.range[1])+(i-1)*60*60*24)&z$dt<(c(date.range[1])+i*60*60*24))#
	yi<-subset(y, y$dt>=(c(date.range[1])+(i-1)*60*60*24)&y$dt<(c(date.range[1])+i*60*60*24))#
	plot(zi$dt, zi[,"Sensor.Glucose..mmol.L."], "n", xlim=c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), ylim=c(-5,12), xaxs="i", las=1, yaxt="n", ylab="")#
	axis(side=2, at=c(2,4,6,8,10), labels=c(2,4,6,8,10), las=1)#
	axis(side=2, at=-5, labels=c("Corr. bolus"), las=1, cex=0.5, col=2)#
	axis(side=2, at=-3.5, labels=c("Meal bolus"), las=1, cex=0.5, col=1)#
	axis(side=2, at=-2, labels="Carbs", las=1, cex=0.5, col=4)#
	axis(side=2, at=-0.5, labels="Exercise", las=1, cex=0.5, col=3)#
	polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(4,4,8,8), border=NA, col="#00FF0040")#
	abline(v=date.range[1]+(i-1)*60*60*24+60*60*c(0:24), col="#00000040")#
	abline(h=c(2,4,6,8,10), col="#00000040")#
	lines(zi$dt, zi[,"Sensor.Glucose..mmol.L."], col="skyblue", lwd=2)#
	points(zi$dt, zi[,'BG.Reading..mmol.L.'], pch=19, cex=1.2)#
	# polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(-10,-10,0,0), border=NA, col="white")#
	x<-matrix(nrow=24, ncol=4)#
	for(j in 1:24){#
		zij<-subset(zi, (zi$dt>=(min(zi$dt)+60*60*(j-1)))&(zi$dt<(min(zi$dt)+60*60*j)))#
		yij<-subset(yi, (yi$dt>=(min(zi$dt)+60*60*(j-1)))&(yi$dt<(min(zi$dt)+60*60*j)))#
		x[j,1]<-sum(zij[,"BWZ.Carb.Input..grams."], na.rm=TRUE)+sum(yij$Carbs)#
		x[j,2]<-sum(zij[,"BWZ.Food.Estimate..U."], na.rm=TRUE)#
		x[j,3]<-sum(zij[,"BWZ.Correction.Estimate..U."], na.rm=TRUE)#
		x[j,4]<-sum(zij[,"BWZ.Estimate..U."], na.rm=TRUE)#
	}#
	x[which(x==0, arr.ind=TRUE)]<-NA#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-2, 24), x[,1], col=4)#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-3.5, 24), x[,2])#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-5, 24), x[,3], col=2)#
	mtext(side=3, adj=0, as.Date(zi$dt[1]))#
	points(yi$dt+60*30, rep(-0.5, length(yi$dt)), pch=yi$Exercise, col=3)#
	#if(i==2) {abline(v=c(date.range[1])+(i-1)*60*60*24+60*60*13, col="purple", lwd=2); text((date.range[1])+(i-1)*60*60*24+60*60*13, 14, xpd=NA, "Changed overnight basal", col="purple")}#
}
pdf(file="~/Google Drive/Diabetes/DIP/Nov9-16_Peacock.pdf", width=8.5, height=11)#
par(mfrow=c(4,1), mar=c(3,4,2,1), oma=c(5,2,2,2))#
#
for(i in 1:d){#
	zi<-subset(z, z$dt>=(c(date.range[1])+(i-1)*60*60*24)&z$dt<(c(date.range[1])+i*60*60*24))#
	yi<-subset(y, y$dt>=(c(date.range[1])+(i-1)*60*60*24)&y$dt<(c(date.range[1])+i*60*60*24))#
	plot(zi$dt, zi[,"Sensor.Glucose..mmol.L."], "n", xlim=c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), ylim=c(-5,12), xaxs="i", las=1, yaxt="n", ylab="")#
	axis(side=2, at=c(2,4,6,8,10), labels=c(2,4,6,8,10), las=1)#
	axis(side=2, at=-5, labels=c("Corr. bolus"), las=1, cex=0.5, col=2)#
	axis(side=2, at=-3.5, labels=c("Meal bolus"), las=1, cex=0.5, col=1)#
	axis(side=2, at=-2, labels="Carbs", las=1, cex=0.5, col=4)#
	axis(side=2, at=-0.5, labels="Exercise", las=1, cex=0.5, col=3)#
	polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(4,4,8,8), border=NA, col="#00FF0040")#
	abline(v=date.range[1]+(i-1)*60*60*24+60*60*c(0:24), col="#00000040")#
	abline(h=c(2,4,6,8,10), col="#00000040")#
	lines(zi$dt, zi[,"Sensor.Glucose..mmol.L."], col="skyblue", lwd=2)#
	points(zi$dt, zi[,'BG.Reading..mmol.L.'], pch=19, cex=1.2)#
	# polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(-10,-10,0,0), border=NA, col="white")#
	x<-matrix(nrow=24, ncol=4)#
	for(j in 1:24){#
		zij<-subset(zi, (zi$dt>=(min(zi$dt)+60*60*(j-1)))&(zi$dt<(min(zi$dt)+60*60*j)))#
		yij<-subset(yi, (yi$dt>=(min(zi$dt)+60*60*(j-1)))&(yi$dt<(min(zi$dt)+60*60*j)))#
		x[j,1]<-sum(zij[,"BWZ.Carb.Input..grams."], na.rm=TRUE)+sum(yij$Carbs)#
		x[j,2]<-sum(zij[,"BWZ.Food.Estimate..U."], na.rm=TRUE)#
		x[j,3]<-sum(zij[,"BWZ.Correction.Estimate..U."], na.rm=TRUE)#
		x[j,4]<-sum(zij[,"BWZ.Estimate..U."], na.rm=TRUE)#
	}#
	x[which(x==0, arr.ind=TRUE)]<-NA#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-2, 24), x[,1], col=4)#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-3.5, 24), x[,2])#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-5, 24), x[,3], col=2)#
	mtext(side=3, adj=0, as.Date(zi$dt[1]))#
	points(yi$dt+60*30, rep(-0.5, length(yi$dt)), pch=yi$Exercise, col=3)#
	#if(i==2) {abline(v=c(date.range[1])+(i-1)*60*60*24+60*60*13, col="purple", lwd=2); text((date.range[1])+(i-1)*60*60*24+60*60*13, 14, xpd=NA, "Changed overnight basal", col="purple")}#
}
dev.off()
pdf(file="~/Google Drive/Diabetes/DIP/Nov9-16_Peacock.pdf", width=8.5, height=11)#
par(mfrow=c(4,1), mar=c(3,4,2,1), oma=c(8,5,2,2))#
#
for(i in 1:d){#
	zi<-subset(z, z$dt>=(c(date.range[1])+(i-1)*60*60*24)&z$dt<(c(date.range[1])+i*60*60*24))#
	yi<-subset(y, y$dt>=(c(date.range[1])+(i-1)*60*60*24)&y$dt<(c(date.range[1])+i*60*60*24))#
	plot(zi$dt, zi[,"Sensor.Glucose..mmol.L."], "n", xlim=c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), ylim=c(-5,12), xaxs="i", las=1, yaxt="n", ylab="")#
	axis(side=2, at=c(2,4,6,8,10), labels=c(2,4,6,8,10), las=1)#
	axis(side=2, at=-5, labels=c("Corr. bolus"), las=1, cex=0.5, col=2)#
	axis(side=2, at=-3.5, labels=c("Meal bolus"), las=1, cex=0.5, col=1)#
	axis(side=2, at=-2, labels="Carbs", las=1, cex=0.5, col=4)#
	axis(side=2, at=-0.5, labels="Exercise", las=1, cex=0.5, col=3)#
	polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(4,4,8,8), border=NA, col="#00FF0040")#
	abline(v=date.range[1]+(i-1)*60*60*24+60*60*c(0:24), col="#00000040")#
	abline(h=c(2,4,6,8,10), col="#00000040")#
	lines(zi$dt, zi[,"Sensor.Glucose..mmol.L."], col="skyblue", lwd=2)#
	points(zi$dt, zi[,'BG.Reading..mmol.L.'], pch=19, cex=1.2)#
	# polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(-10,-10,0,0), border=NA, col="white")#
	x<-matrix(nrow=24, ncol=4)#
	for(j in 1:24){#
		zij<-subset(zi, (zi$dt>=(min(zi$dt)+60*60*(j-1)))&(zi$dt<(min(zi$dt)+60*60*j)))#
		yij<-subset(yi, (yi$dt>=(min(zi$dt)+60*60*(j-1)))&(yi$dt<(min(zi$dt)+60*60*j)))#
		x[j,1]<-sum(zij[,"BWZ.Carb.Input..grams."], na.rm=TRUE)+sum(yij$Carbs)#
		x[j,2]<-sum(zij[,"BWZ.Food.Estimate..U."], na.rm=TRUE)#
		x[j,3]<-sum(zij[,"BWZ.Correction.Estimate..U."], na.rm=TRUE)#
		x[j,4]<-sum(zij[,"BWZ.Estimate..U."], na.rm=TRUE)#
	}#
	x[which(x==0, arr.ind=TRUE)]<-NA#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-2, 24), x[,1], col=4)#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-3.5, 24), x[,2])#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-5, 24), x[,3], col=2)#
	mtext(side=3, adj=0, as.Date(zi$dt[1]))#
	points(yi$dt+60*30, rep(-0.5, length(yi$dt)), pch=yi$Exercise, col=3)#
	#if(i==2) {abline(v=c(date.range[1])+(i-1)*60*60*24+60*60*13, col="purple", lwd=2); text((date.range[1])+(i-1)*60*60*24+60*60*13, 14, xpd=NA, "Changed overnight basal", col="purple")}#
}#
#
dev.off()
pdf(file="~/Google Drive/Diabetes/DIP/Nov9-16_Peacock.pdf", width=8.5, height=11)#
par(mfrow=c(4,1), mar=c(3,4,2,1), oma=c(8,5,4,4))#
#
for(i in 1:d){#
	zi<-subset(z, z$dt>=(c(date.range[1])+(i-1)*60*60*24)&z$dt<(c(date.range[1])+i*60*60*24))#
	yi<-subset(y, y$dt>=(c(date.range[1])+(i-1)*60*60*24)&y$dt<(c(date.range[1])+i*60*60*24))#
	plot(zi$dt, zi[,"Sensor.Glucose..mmol.L."], "n", xlim=c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), ylim=c(-5,12), xaxs="i", las=1, yaxt="n", ylab="")#
	axis(side=2, at=c(2,4,6,8,10), labels=c(2,4,6,8,10), las=1)#
	axis(side=2, at=-5, labels=c("Corr. bolus"), las=1, cex=0.5, col=2)#
	axis(side=2, at=-3.5, labels=c("Meal bolus"), las=1, cex=0.5, col=1)#
	axis(side=2, at=-2, labels="Carbs", las=1, cex=0.5, col=4)#
	axis(side=2, at=-0.5, labels="Exercise", las=1, cex=0.5, col=3)#
	polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(4,4,8,8), border=NA, col="#00FF0040")#
	abline(v=date.range[1]+(i-1)*60*60*24+60*60*c(0:24), col="#00000040")#
	abline(h=c(2,4,6,8,10), col="#00000040")#
	lines(zi$dt, zi[,"Sensor.Glucose..mmol.L."], col="skyblue", lwd=2)#
	points(zi$dt, zi[,'BG.Reading..mmol.L.'], pch=19, cex=1.2)#
	# polygon(x=c(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)), rev(c((c(date.range[1])+(i-1)*60*60*24), (c(date.range[1])+i*60*60*24)))), y=c(-10,-10,0,0), border=NA, col="white")#
	x<-matrix(nrow=24, ncol=4)#
	for(j in 1:24){#
		zij<-subset(zi, (zi$dt>=(min(zi$dt)+60*60*(j-1)))&(zi$dt<(min(zi$dt)+60*60*j)))#
		yij<-subset(yi, (yi$dt>=(min(zi$dt)+60*60*(j-1)))&(yi$dt<(min(zi$dt)+60*60*j)))#
		x[j,1]<-sum(zij[,"BWZ.Carb.Input..grams."], na.rm=TRUE)+sum(yij$Carbs)#
		x[j,2]<-sum(zij[,"BWZ.Food.Estimate..U."], na.rm=TRUE)#
		x[j,3]<-sum(zij[,"BWZ.Correction.Estimate..U."], na.rm=TRUE)#
		x[j,4]<-sum(zij[,"BWZ.Estimate..U."], na.rm=TRUE)#
	}#
	x[which(x==0, arr.ind=TRUE)]<-NA#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-2, 24), x[,1], col=4)#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-3.5, 24), x[,2])#
	text(seq(min(zi$dt), max(zi$dt), 60*60)+60*30, rep(-5, 24), x[,3], col=2)#
	mtext(side=3, adj=0, as.Date(zi$dt[1]))#
	points(yi$dt+60*30, rep(-0.5, length(yi$dt)), pch=yi$Exercise, col=3)#
	#if(i==2) {abline(v=c(date.range[1])+(i-1)*60*60*24+60*60*13, col="purple", lwd=2); text((date.range[1])+(i-1)*60*60*24+60*60*13, 14, xpd=NA, "Changed overnight basal", col="purple")}#
}#
#
dev.off()
